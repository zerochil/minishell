  1. [EOF, (null)] 
  2. [WORD, ls] [WORD, -a] [EOF, (null)] 
  3. [WORD, echo] [WORD, "Hello World"] [REDIRECTION_TRUNC, file.txt] [EOF, (null)] 
  4. [WORD, cat] [WORD, file.txt] [PIPE, (null)] [WORD, grep] [WORD, 'pattern'] [EOF, (null)] 
  5. [WORD, sort] [REDIRECTION_IN, input.txt] [REDIRECTION_TRUNC, sorted.txt] [EOF, (null)] 
  6. [WORD, find] [WORD, .] [WORD, -name] [WORD, '*.c'] [LOGIC_OR, (null)] [WORD, echo] [WORD, "No C files found"] [EOF, (null)] 
  7. [WORD, mkdir] [WORD, folder] [LOGIC_AND, (null)] [WORD, cd] [WORD, folder] [EOF, (null)] 
  8. [OPEN_PARENTHESIS, (null)] [WORD, echo] [WORD, "Start"] [LOGIC_AND, (null)] [WORD, ls] [CLOSE_PARENTHESIS, (null)] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Failed"] [EOF, (null)] 
  9. [WORD, grep] [WORD, "example"] [REDIRECTION_IN, file.txt] [EOF, (null)] 
 10. [WORD, cat] [HERE_DOCUMENT, EOF] [EOF, (null)] 
 11. [WORD, touch] [WORD, file1] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Created file1"] [EOF, (null)] 
 12. [WORD, chmod] [WORD, 755] [WORD, file1] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Permission denied"] [EOF, (null)] 
 13. [WORD, ls] [WORD, -l] [REDIRECTION_TRUNC, directory.txt] [EOF, (null)] 
 14. [WORD, echo] [WORD, 'Text'] [REDIRECTION_APPEND, file.txt] [EOF, (null)] 
 15. [WORD, echo] [WORD, "Hello"] [LOGIC_AND, (null)] [WORD, echo] [WORD, "World"] [EOF, (null)] 
 16. [WORD, grep] [WORD, "match"] [WORD, file.txt] [LOGIC_AND, (null)] [WORD, sort] [REDIRECTION_IN, file.txt] [EOF, (null)] 
 17. [WORD, rm] [WORD, file.txt] [LOGIC_OR, (null)] [WORD, echo] [WORD, "File does not exist"] [EOF, (null)] 
 18. [WORD, cp] [WORD, file1] [WORD, file2] [LOGIC_AND, (null)] [WORD, mv] [WORD, file2] [WORD, /backup/] [EOF, (null)] 
 19. [WORD, mkdir] [WORD, test] [LOGIC_AND, (null)] [OPEN_PARENTHESIS, (null)] [WORD, cd] [WORD, test] [LOGIC_AND, (null)] [WORD, touch] [WORD, file] [CLOSE_PARENTHESIS, (null)] [EOF, (null)] 
 20. [WORD, echo] [WORD, "test"] [PIPE, (null)] [WORD, wc] [WORD, -l] [REDIRECTION_TRUNC, count.txt] [EOF, (null)] 
 21. [WORD, tar] [WORD, -czf] [WORD, archive.tar.gz] [WORD, folder] [EOF, (null)] 
 22. [WORD, echo] [WORD, "Line"] [REDIRECTION_APPEND, log.txt] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Failed"] [EOF, (null)] 
 23. [WORD, cat] [REDIRECTION_IN, input.txt] [PIPE, (null)] [WORD, awk] [WORD, '{print $1}'] [EOF, (null)] 
 24. [WORD, diff] [WORD, file1] [WORD, file2] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Files differ"] [EOF, (null)] 
 25. [WORD, mv] [WORD, file1] [WORD, folder/] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Moved file1"] [EOF, (null)] 
 26. [WORD, find] [WORD, /tmp] [WORD, -name] [WORD, 'test*'] [EOF, (null)] 
 27. [WORD, echo] [WORD, "New"] [REDIRECTION_TRUNC, /dev/null] [EOF, (null)] 
 28. [OPEN_PARENTHESIS, (null)] [WORD, ls] [WORD, -al] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Listed"] [CLOSE_PARENTHESIS, (null)] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Error"] [EOF, (null)] 
 29. [WORD, tail] [WORD, -n] [WORD, 10] [WORD, file.txt] [EOF, (null)] 
 30. [WORD, head] [WORD, -n] [WORD, 5] [WORD, file.txt] [PIPE, (null)] [WORD, grep] [WORD, 'Header'] [EOF, (null)] 
 31. [WORD, find] [WORD, .] [WORD, -type] [WORD, f] [PIPE, (null)] [WORD, wc] [WORD, -l] [EOF, (null)] 
 32. [WORD, echo] [WORD, "Output"] [REDIRECTION_APPEND, log.txt] [EOF, (null)] 
 33. [WORD, rm] [WORD, -r] [WORD, dir] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Error removing"] [EOF, (null)] 
 34. [WORD, grep] [WORD, "value"] [REDIRECTION_IN, config.txt] [EOF, (null)] 
 35. [WORD, echo] [WORD, "script"] [REDIRECTION_TRUNC, run.sh] [LOGIC_AND, (null)] [WORD, chmod] [WORD, +x] [WORD, run.sh] [EOF, (null)] 
 36. [WORD, ls] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Error listing directory"] [EOF, (null)] 
 37. [WORD, ps] [WORD, aux] [PIPE, (null)] [WORD, grep] [WORD, 'process'] [EOF, (null)] 
 38. [WORD, find] [WORD, .] [WORD, -size] [WORD, +1M] [REDIRECTION_TRUNC, large_files.txt] [EOF, (null)] 
 39. [WORD, echo] [WORD, "Backup"] [LOGIC_AND, (null)] [WORD, tar] [WORD, -czf] [WORD, backup.tar.gz] [WORD, folder] [EOF, (null)] 
 40. [WORD, cat] [WORD, file1.txt] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Printed file1"] [EOF, (null)] 
 41. [WORD, mkdir] [WORD, temp] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Directory exists"] [EOF, (null)] 
 42. [WORD, echo] [WORD, "data"] [REDIRECTION_TRUNC, data.txt] [LOGIC_AND, (null)] [WORD, wc] [WORD, -c] [REDIRECTION_IN, data.txt] [EOF, (null)] 
 43. [WORD, awk] [WORD, '{print $2}'] [REDIRECTION_IN, file.txt] [EOF, (null)] 
 44. [WORD, cp] [WORD, file] [WORD, file_copy] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Copy failed"] [EOF, (null)] 
 45. [OPEN_PARENTHESIS, (null)] [WORD, ls] [PIPE, (null)] [WORD, sort] [CLOSE_PARENTHESIS, (null)] [REDIRECTION_TRUNC, sorted_list.txt] [EOF, (null)] 
 46. [WORD, echo] [WORD, 'Final'] [PIPE, (null)] [WORD, wc] [WORD, -c] [REDIRECTION_APPEND, output.log] [EOF, (null)] 
 47. [WORD, grep] [WORD, "pattern"] [REDIRECTION_IN, input.txt] [LOGIC_AND, (null)] [WORD, awk] [WORD, '{print $1}'] [EOF, (null)] 
 48. [WORD, cat] [REDIRECTION_IN, file1] [PIPE, (null)] [WORD, cat] [REDIRECTION_APPEND, file2] [EOF, (null)] 
 49. [WORD, chmod] [WORD, 644] [WORD, file.txt] [EOF, (null)] 
 50. [WORD, touch] [WORD, {file1,file2}] [LOGIC_AND, (null)] [WORD, ls] [EOF, (null)] 
 51. [WORD, echo] [WORD, "Creating files"] [LOGIC_AND, (null)] [WORD, mkdir] [WORD, newdir] [EOF, (null)] 
 52. [WORD, echo] [WORD, "Line1"] [REDIRECTION_APPEND, file] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Line2"] [REDIRECTION_APPEND, file] [EOF, (null)] 
 53. [WORD, rm] [WORD, *.log] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Log files cleared"] [EOF, (null)] 
 54. [WORD, echo] [WORD, "pipeline"] [PIPE, (null)] [WORD, tr] [WORD, 'a-z'] [WORD, 'A-Z'] [EOF, (null)] 
 55. [WORD, echo] [WORD, 'quotes'] [PIPE, (null)] [WORD, wc] [WORD, -c] [REDIRECTION_TRUNC, count] [EOF, (null)] 
 56. [WORD, cat] [WORD, input.txt] [PIPE, (null)] [WORD, cut] [WORD, -d] [WORD, ','] [WORD, -f] [WORD, 1] [EOF, (null)] 
 57. [WORD, touch] [WORD, file1] [LOGIC_AND, (null)] [WORD, mv] [WORD, file1] [WORD, folder/] [EOF, (null)] 
 58. [WORD, mkdir] [WORD, project] [LOGIC_AND, (null)] [OPEN_PARENTHESIS, (null)] [WORD, cd] [WORD, project] [LOGIC_AND, (null)] [WORD, touch] [WORD, init] [CLOSE_PARENTHESIS, (null)] [EOF, (null)] 
 59. [WORD, echo] [WORD, "Building"] [REDIRECTION_TRUNC, build.log] [LOGIC_AND, (null)] [WORD, make] [EOF, (null)] 
 60. [WORD, ls] [PIPE, (null)] [WORD, grep] [WORD, '^test'] [EOF, (null)] 
 61. [WORD, cat] [HERE_DOCUMENT, EOF] [REDIRECTION_TRUNC, file] [EOF, (null)] 
 62. [WORD, find] [WORD, /] [WORD, -name] [WORD, 'backup*'] [EOF, (null)] 
 63. [WORD, ls] [WORD, -lh] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Details"] [EOF, (null)] 
 64. [WORD, grep] [WORD, 'token'] [REDIRECTION_IN, source.txt] [EOF, (null)] 
 65. [WORD, touch] [WORD, file] [LOGIC_AND, (null)] [WORD, chmod] [WORD, 777] [WORD, file] [EOF, (null)] 
 66. [WORD, echo] [WORD, "Line1"] [REDIRECTION_TRUNC, file] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Line2"] [REDIRECTION_APPEND, file] [EOF, (null)] 
 67. [WORD, echo] [WORD, "multi-line"] [PIPE, (null)] [WORD, awk] [WORD, '{print $1}'] [EOF, (null)] 
 68. [WORD, cp] [WORD, {file1,file2}] [WORD, /backup] [EOF, (null)] 
 69. [WORD, rm] [WORD, file] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Deleted"] [EOF, (null)] 
 70. [WORD, grep] [WORD, "string"] [REDIRECTION_IN, file] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Not found"] [EOF, (null)] 
 71. [WORD, find] [WORD, .] [WORD, -name] [WORD, '*.log'] [LOGIC_AND, (null)] [WORD, rm] [WORD, *.log] [EOF, (null)] 
 72. [WORD, cat] [REDIRECTION_IN, input.log] [PIPE, (null)] [WORD, grep] [WORD, 'Error'] [EOF, (null)] 
 73. [WORD, touch] [WORD, file] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Edited file"] [EOF, (null)] 
 74. [WORD, mkdir] [WORD, testdir] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Cannot create"] [EOF, (null)] 
 75. [WORD, echo] [WORD, "Saving"] [LOGIC_AND, (null)] [WORD, tar] [WORD, -xf] [WORD, file.tar] [EOF, (null)] 
 76. [WORD, find] [WORD, .] [WORD, -mtime] [WORD, -1] [REDIRECTION_TRUNC, modified_files.txt] [EOF, (null)] 
 77. [WORD, ps] [WORD, aux] [PIPE, (null)] [WORD, grep] [WORD, 'daemon'] [REDIRECTION_TRUNC, processes.txt] [EOF, (null)] 
 78. [WORD, echo] [WORD, "process"] [LOGIC_AND, (null)] [WORD, ps] [WORD, aux] [PIPE, (null)] [WORD, wc] [WORD, -l] [EOF, (null)] 
 79. [WORD, touch] [WORD, temp.log] [LOGIC_AND, (null)] [WORD, rm] [WORD, temp.log] [EOF, (null)] 
 80. [WORD, ls] [PIPE, (null)] [WORD, awk] [WORD, '{print $1}'] [REDIRECTION_TRUNC, files.txt] [EOF, (null)] 
 81. [WORD, echo] [WORD, "random"] [REDIRECTION_TRUNC, log] [LOGIC_AND, (null)] [WORD, chmod] [WORD, 600] [WORD, log] [EOF, (null)] 
 82. [WORD, rm] [WORD, -rf] [WORD, /tmp/*] [EOF, (null)] 
 83. [WORD, echo] [WORD, "word"] [PIPE, (null)] [WORD, grep] [WORD, 'wo'] [EOF, (null)] 
 84. [WORD, find] [WORD, .] [WORD, -type] [WORD, f] [WORD, -exec] [WORD, echo] [WORD, {}] [WORD, \;] [EOF, (null)] 
 85. [WORD, grep] [WORD, -v] [WORD, "word"] [REDIRECTION_IN, file] [EOF, (null)] 
 86. [WORD, echo] [WORD, "list"] [PIPE, (null)] [WORD, xargs] [WORD, ls] [WORD, -l] [EOF, (null)] 
 87. [WORD, grep] [WORD, -c] [WORD, "match"] [WORD, file] [EOF, (null)] 
 88. [WORD, find] [WORD, .] [WORD, -name] [WORD, 'data*'] [REDIRECTION_TRUNC, result.txt] [EOF, (null)] 
 89. [WORD, ls] [PIPE, (null)] [WORD, wc] [WORD, -l] [REDIRECTION_TRUNC, count.txt] [EOF, (null)] 
 90. [WORD, echo] [WORD, "pipeline"] [LOGIC_AND, (null)] [WORD, ls] [PIPE, (null)] [WORD, grep] [WORD, 'data'] [EOF, (null)] 
 91. [WORD, rm] [WORD, {file1,file2}] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Failed to remove"] [EOF, (null)] 
 92. [WORD, mkdir] [WORD, dir] [LOGIC_AND, (null)] [WORD, cp] [WORD, file] [WORD, dir/] [EOF, (null)] 
 93. [WORD, echo] [WORD, 'backup'] [LOGIC_AND, (null)] [OPEN_PARENTHESIS, (null)] [WORD, find] [WORD, /home] [WORD, -name] [WORD, '*.bak'] [CLOSE_PARENTHESIS, (null)] [EOF, (null)] 
 94. [WORD, tar] [WORD, -czvf] [WORD, archive.tar.gz] [WORD, files] [EOF, (null)] 
 95. [WORD, grep] [WORD, "key"] [REDIRECTION_IN, keys.txt] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Not found"] [EOF, (null)] 
 96. [WORD, touch] [WORD, {fileA,fileB}] [LOGIC_AND, (null)] [WORD, chmod] [WORD, +x] [WORD, fileA] [EOF, (null)] 
 97. [WORD, echo] [WORD, "Hello"] [REDIRECTION_APPEND, greeting.log] [LOGIC_AND, (null)] [WORD, wc] [WORD, -c] [WORD, greeting.log] [EOF, (null)] 
 98. [WORD, mv] [WORD, {source,target}] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Move failed"] [EOF, (null)] 
 99. [WORD, mkdir] [WORD, folder] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Folder created"] [EOF, (null)] 
100. [WORD, echo] [WORD, "end"] [LOGIC_AND, (null)] [OPEN_PARENTHESIS, (null)] [WORD, ls] [PIPE, (null)] [WORD, sort] [CLOSE_PARENTHESIS, (null)] [EOF, (null)] 
101. [WORD, find] [WORD, /tmp] [WORD, -name] [WORD, 'cache*'] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Caches found"] [EOF, (null)] 
102. [OPEN_PARENTHESIS, (null)] [WORD, echo] [WORD, "Start"] [LOGIC_AND, (null)] [WORD, ls] [WORD, -l] [PIPE, (null)] [WORD, grep] [WORD, 'test'] [CLOSE_PARENTHESIS, (null)] [REDIRECTION_TRUNC, output.log] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Failed to list files"] [EOF, (null)] 
103. [WORD, mkdir] [WORD, backup] [LOGIC_AND, (null)] [OPEN_PARENTHESIS, (null)] [WORD, cp] [WORD, file1.txt] [WORD, file2.txt] [WORD, backup/] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Copy failed"] [CLOSE_PARENTHESIS, (null)] [LOGIC_AND, (null)] [WORD, ls] [WORD, backup] [EOF, (null)] 
104. [WORD, find] [WORD, /home] [WORD, -type] [WORD, f] [WORD, -name] [WORD, '*.log'] [PIPE, (null)] [WORD, xargs] [WORD, grep] [WORD, -i] [WORD, "error"] [LOGIC_OR, (null)] [WORD, echo] [WORD, "No logs found"] [EOF, (null)] 
105. [WORD, cat] [WORD, input.txt] [PIPE, (null)] [WORD, awk] [WORD, '{if ($1 ~ /test/) print $2; else print "N/A"}'] [REDIRECTION_TRUNC, processed.txt] [EOF, (null)] 
106. [OPEN_PARENTHESIS, (null)] [WORD, find] [WORD, .] [WORD, -name] [WORD, '*.tmp'] [LOGIC_AND, (null)] [WORD, rm] [WORD, *.tmp] [LOGIC_OR, (null)] [WORD, echo] [WORD, "No temporary files found"] [CLOSE_PARENTHESIS, (null)] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Cleanup complete"] [EOF, (null)] 
107. [OPEN_PARENTHESIS, (null)] [WORD, ls] [WORD, -al] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Listing complete"] [CLOSE_PARENTHESIS, (null)] [PIPE, (null)] [WORD, tee] [WORD, listing.log] [PIPE, (null)] [WORD, grep] [WORD, -i] [WORD, 'directory'] [EOF, (null)] 
108. [WORD, mkdir] [WORD, project] [LOGIC_AND, (null)] [OPEN_PARENTHESIS, (null)] [WORD, cd] [WORD, project] [LOGIC_AND, (null)] [WORD, touch] [WORD, file1] [WORD, file2] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Project initialized"] [CLOSE_PARENTHESIS, (null)] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Initialization failed"] [EOF, (null)] 
109. [WORD, grep] [WORD, -i] [WORD, "keyword"] [WORD, file.txt] [LOGIC_AND, (null)] [WORD, awk] [WORD, '{print $1}'] [REDIRECTION_IN, file.txt] [PIPE, (null)] [WORD, sort] [PIPE, (null)] [WORD, uniq] [REDIRECTION_TRUNC, keywords.txt] [EOF, (null)] 
110. [WORD, echo] [WORD, "Line 1"] [REDIRECTION_APPEND, file.txt] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Line 2"] [REDIRECTION_APPEND, file.txt] [LOGIC_AND, (null)] [WORD, sort] [REDIRECTION_IN, file.txt] [PIPE, (null)] [WORD, uniq] [REDIRECTION_TRUNC, sorted.txt] [EOF, (null)] 
111. [OPEN_PARENTHESIS, (null)] [WORD, ls] [WORD, /path/to/dir] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Directory not found"] [CLOSE_PARENTHESIS, (null)] [LOGIC_AND, (null)] [OPEN_PARENTHESIS, (null)] [WORD, find] [WORD, .] [WORD, -type] [WORD, f] [REDIRECTION_TRUNC, files.log] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Find failed"] [CLOSE_PARENTHESIS, (null)] [EOF, (null)] 
112. [OPEN_PARENTHESIS, (null)] [WORD, echo] [WORD, "Header"] [LOGIC_AND, (null)] [WORD, awk] [WORD, '{print $1}'] [REDIRECTION_IN, data.csv] [PIPE, (null)] [WORD, sort] [CLOSE_PARENTHESIS, (null)] [REDIRECTION_TRUNC, report.txt] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Report generation failed"] [EOF, (null)] 
113. [WORD, tar] [WORD, -czf] [WORD, archive.tar.gz] [WORD, folder] [LOGIC_AND, (null)] [OPEN_PARENTHESIS, (null)] [WORD, mv] [WORD, archive.tar.gz] [WORD, /backup/] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Failed to move archive"] [CLOSE_PARENTHESIS, (null)] [EOF, (null)] 
114. [WORD, echo] [WORD, "Start processing"] [LOGIC_AND, (null)] [OPEN_PARENTHESIS, (null)] [WORD, grep] [WORD, -i] [WORD, 'error'] [REDIRECTION_IN, logs.txt] [LOGIC_OR, (null)] [WORD, echo] [WORD, "No errors found"] [CLOSE_PARENTHESIS, (null)] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Done"] [EOF, (null)] 
115. [WORD, find] [WORD, .] [WORD, -type] [WORD, f] [WORD, -exec] [WORD, cp] [WORD, {}] [WORD, /destination/] [WORD, \;] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Files copied successfully"] [EOF, (null)] 
116. [OPEN_PARENTHESIS, (null)] [WORD, echo] [WORD, "Building project"] [LOGIC_AND, (null)] [WORD, make] [CLOSE_PARENTHESIS, (null)] [LOGIC_OR, (null)] [OPEN_PARENTHESIS, (null)] [WORD, echo] [WORD, "Build failed"] [LOGIC_AND, (null)] [WORD, tail] [WORD, -n] [WORD, 10] [WORD, build.log] [CLOSE_PARENTHESIS, (null)] [EOF, (null)] 
117. [WORD, awk] [WORD, '{print $2, $3}'] [REDIRECTION_IN, input.txt] [PIPE, (null)] [WORD, sort] [WORD, -r] [PIPE, (null)] [WORD, uniq] [PIPE, (null)] [WORD, tee] [WORD, sorted_output.txt] [PIPE, (null)] [WORD, wc] [WORD, -l] [EOF, (null)] 
118. [OPEN_PARENTHESIS, (null)] [WORD, ls] [PIPE, (null)] [WORD, grep] [WORD, -E] [WORD, '^(file|data)'] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Filtered files"] [CLOSE_PARENTHESIS, (null)] [LOGIC_OR, (null)] [WORD, echo] [WORD, "No matching files found"] [EOF, (null)] 
119. [WORD, find] [WORD, .] [WORD, -type] [WORD, d] [WORD, -exec] [WORD, mkdir] [WORD, -p] [WORD, /backup/{}] [WORD, \;] [LOGIC_AND, (null)] [WORD, echo] [WORD, "Directories mirrored in /backup/"] [EOF, (null)] 
120. [OPEN_PARENTHESIS, (null)] [WORD, cd] [WORD, /var/log] [LOGIC_AND, (null)] [WORD, grep] [WORD, -i] [WORD, "critical"] [WORD, *.log] [CLOSE_PARENTHESIS, (null)] [LOGIC_OR, (null)] [WORD, echo] [WORD, "No critical errors found"] [EOF, (null)] 
121. [WORD, echo] [WORD, "Pipeline test"] [PIPE, (null)] [OPEN_PARENTHESIS, (null)] [WORD, tr] [WORD, 'a-z'] [WORD, 'A-Z'] [LOGIC_AND, (null)] [WORD, tee] [WORD, uppercase.log] [CLOSE_PARENTHESIS, (null)] [LOGIC_OR, (null)] [WORD, echo] [WORD, "Transformation failed"] [EOF, (null)] 
